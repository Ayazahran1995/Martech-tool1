import React, { useState } from 'react';
import {
  Box,
  Paper,
  Typography,
  Grid,
  Button,
  TextField,
  Select,
  MenuItem,
  FormControl,
  InputLabel,
  Tabs,
  Tab,
  Chip
} from '@mui/material';

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`preview-tabpanel-${index}`}
      aria-labelledby={`preview-tab-${index}`}
      {...other}
    >
      {value === index && (
        <Box sx={{ p: 3 }}>
          {children}
        </Box>
      )}
    </div>
  );
}

const emailTemplates = [
  { id: 'newsletter', name: 'Newsletter Template' },
  { id: 'promotion', name: 'Promotional Email' },
  { id: 'announcement', name: 'Announcement' },
  { id: 'welcome', name: 'Welcome Email' }
];

const EmailPreview: React.FC = () => {
  const [selectedTemplate, setSelectedTemplate] = useState('newsletter');
  const [tabValue, setTabValue] = useState(0);
  const [emailContent, setEmailContent] = useState({
    subject: 'Welcome to Our Newsletter!',
    previewText: 'Check out our latest updates and offers...',
    content: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h1 style="color: #333;">Welcome to Our Newsletter!</h1>
        <p>Dear subscriber,</p>
        <p>We're excited to share our latest updates with you...</p>
        <div style="background-color: #f5f5f5; padding: 20px; margin: 20px 0;">
          <h2 style="color: #1976d2;">Featured Content</h2>
          <p>Check out our latest blog posts and updates...</p>
        </div>
        <p>Best regards,<br/>Your Marketing Team</p>
      </div>
    `
  });

  const handleTemplateChange = (event: React.ChangeEvent<{ value: unknown }>) => {
    setSelectedTemplate(event.target.value as string);
  };

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setTabValue(newValue);
  };

  const spamScore = Math.floor(Math.random() * 20) + 80; // Random score between 80-100

  return (
    <Box sx={{ p: 3 }}>
      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>
        <Typography variant="h4">Email Campaign Preview</Typography>
        <Box>
          <Chip 
            label={`Spam Score: ${spamScore}%`} 
            color={spamScore > 90 ? 'success' : 'warning'} 
            sx={{ mr: 2 }}
          />
          <Button variant="contained" color="primary">
            Send Test Email
          </Button>
        </Box>
      </Box>

      <Grid container spacing={3}>
        <Grid item xs={12} md={4}>
          <Paper sx={{ p: 2 }}>
            <Typography variant="h6" gutterBottom>
              Email Settings
            </Typography>
            <TextField
              fullWidth
              label="Subject Line"
              value={emailContent.subject}
              onChange={(e) => setEmailContent({ ...emailContent, subject: e.target.value })}
              sx={{ mb: 2 }}
            />
            <TextField
              fullWidth
              label="Preview Text"
              value={emailContent.previewText}
              onChange={(e) => setEmailContent({ ...emailContent, previewText: e.target.value })}
              sx={{ mb: 2 }}
            />
            <FormControl fullWidth>
              <InputLabel>Template</InputLabel>
              <Select
                value={selectedTemplate}
                label="Template"
                onChange={handleTemplateChange}
              >
                {emailTemplates.map((template) => (
                  <MenuItem key={template.id} value={template.id}>
                    {template.name}
                  </MenuItem>
                ))}
              </Select>
            </FormControl>
          </Paper>
        </Grid>

        <Grid item xs={12} md={8}>
          <Paper sx={{ p: 2 }}>
            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>
              <Tabs value={tabValue} onChange={handleTabChange}>
                <Tab label="Desktop Preview" />
                <Tab label="Mobile Preview" />
                <Tab label="Plain Text" />
              </Tabs>
            </Box>
            <TabPanel value={tabValue} index={0}>
              <Box 
                sx={{ 
                  maxWidth: 600, 
                  margin: '0 auto',
                  border: '1px solid #ddd',
                  borderRadius: 1,
                  overflow: 'hidden'
                }}
              >
                <Box sx={{ p: 2, bgcolor: '#f5f5f5', borderBottom: '1px solid #ddd' }}>
                  <Typography variant="subtitle2" color="text.secondary">
                    To: subscriber@example.com
                  </Typography>
                  <Typography variant="subtitle2" color="text.secondary">
                    From: marketing@yourcompany.com
                  </Typography>
                  <Typography variant="subtitle2" color="text.secondary">
                    Subject: {emailContent.subject}
                  </Typography>
                </Box>
                <Box 
                  sx={{ p: 2 }}
                  dangerouslySetInnerHTML={{ __html: emailContent.content }}
                />
              </Box>
            </TabPanel>
            <TabPanel value={tabValue} index={1}>
              <Box 
                sx={{ 
                  maxWidth: 375, 
                  margin: '0 auto',
                  border: '1px solid #ddd',
                  borderRadius: 1,
                  overflow: 'hidden'
                }}
              >
                <Box sx={{ p: 2, bgcolor: '#f5f5f5', borderBottom: '1px solid #ddd' }}>
                  <Typography variant="subtitle2" color="text.secondary">
                    To: subscriber@example.com
                  </Typography>
                  <Typography variant="subtitle2" color="text.secondary">
                    From: marketing@yourcompany.com
                  </Typography>
                  <Typography variant="subtitle2" color="text.secondary">
                    Subject: {emailContent.subject}
                  </Typography>
                </Box>
                <Box 
                  sx={{ p: 2 }}
                  dangerouslySetInnerHTML={{ __html: emailContent.content }}
                />
              </Box>
            </TabPanel>
            <TabPanel value={tabValue} index={2}>
              <TextField
                fullWidth
                multiline
                rows={10}
                value={emailContent.content.replace(/<[^>]*>/g, '')}
                onChange={(e) => setEmailContent({ ...emailContent, content: e.target.value })}
              />
            </TabPanel>
          </Paper>
        </Grid>
      </Grid>
    </Box>
  );
};

export default EmailPreview; 
